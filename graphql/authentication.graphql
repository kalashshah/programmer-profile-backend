scalar DateTime

# User type
type User {
  id: ID!
  name: String!
  email: String!
  profilePicture: String
  profilePicturePublicId: String
  description: String
  codeforcesUsername: String
  githubToken: String
  leetcodeUsername: String
  createdAt: DateTime!
  updatedAt: DateTime!
  password: String!
  isVerified: Boolean!
  followedByIds: [ID!]!
  followingIds: [ID!]!
}

type Token {
  id: ID!
  code: String!
  email: String!
  createdAt: DateTime!
}

# Signup
input SignupInput {
  name: String!
  email: String!
  password: String!
  confirmPassword: String!
}

# Signin
input SigninInput {
  email: String!
  password: String!
}

# Forgot Password
input ForgotPasswordInput {
  email: String!
}

# Reset Password
input ResetPasswordInput {
  email: String!
  code: String!
  password: String!
  confirmPassword: String!
}

input CheckCodeInput {
  code: String!
  email: String!
}

type SigninOutput {
  token: String!
  user: User!
}

type CheckCodeOutptut {
  token: String!
  user: User!
}

# Mutation for authentication
type Mutation {
  signup(input: SignupInput!): String!
  signin(input: SigninInput!): SigninOutput!
  forgotPassword(input: ForgotPasswordInput!): String!
  resetPassword(input: ResetPasswordInput!): String!
  checkCode(input: CheckCodeInput!): CheckCodeOutptut!
}
