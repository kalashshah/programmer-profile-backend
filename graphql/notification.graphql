enum NotificationType {
  FOLLOWING
}

type UserAvatar {
  id: ID!
  name: String!
  profilePicture: String
}

type Notification {
  id: ID!
  description: String!
  createdAt: DateTime!
  seenAt: DateTime
  seenStatus: Boolean!
  User: UserAvatar
  userId: ID
  notificationType: NotificationType!
  otherUserId: ID
  OtherUser: UserAvatar
}

input SeeNotificationInput {
  notificationId: ID!
}

input SeeNotificationsInput {
  notificationIds: [ID!]!
}

type NotificationOutput {
  notifications: [Notification!]!
  unseenNotifications: Int!
}

type Mutation {
  seeNotification(input: SeeNotificationInput!): String!
  seeNotifications(input: SeeNotificationsInput!): String!
}

type Query {
  notifications: NotificationOutput!
}
