generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                     String         @id @default(auto()) @map("_id") @db.ObjectId
  email                  String         @unique
  name                   String
  password               String
  isVerified             Boolean        @default(false)
  profilePicture         String?
  profilePicturePublicId String?
  description            String?
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt
  githubToken            String?
  leetcodeUsername       String?
  codeforcesUsername     String?
  following              User[]         @relation("FollowingUser", fields: [followingIds], references: [id])
  followingIds           String[]       @db.ObjectId
  followedBy             User[]         @relation("FollowingUser", fields: [followedByIds], references: [id])
  followedByIds          String[]       @db.ObjectId
  notifications          Notification[]
}

model Token {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  code      String
  email     String   @unique
  createdAt DateTime @default(now())
}

model GithubAuth {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  state     String
  createdAt DateTime @default(now())
  userId    String   @unique @db.ObjectId
}

enum NotificationType {
  FOLLOWING
}

model Notification {
  id               String           @id @default(auto()) @map("_id") @db.ObjectId
  description      String
  createdAt        DateTime         @default(now())
  seenAt           DateTime?
  seenStatus       Boolean          @default(false)
  User             User?            @relation(fields: [userId], references: [id])
  userId           String?          @db.ObjectId
  notificationType NotificationType
}
